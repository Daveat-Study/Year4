Date: 20/Sep/22 - Time: 7:30-9:00am 

    5). The Principle of OOP

        a). Encapsulation

        b). Inheritance
            + Inheritance ជាលទ្ធផលដែល class មួយអាចទទួលនូវអ្វីៗ (members) របស់ class មួយផ្សេងទៀតបាន។
                - class ដែលផ្តល់ member អោយទៅគេ ហៅថា Base class, Parent class, Super class.
                - class ដែលទទួល members ពីគេ ហៅថា Derived class, Child class, Sub class.
                - Derived class អាចថែមនូវ members ផ្សេងៗទៀតបាន.

            i) 
                + Accessibility & Visibility:
                    ____________________________________________________________________________________________
                    | Access Modifier | In the clas itself | In the Derived class | Outside the class (object) |
                    --------------------------------------------------------------------------------------------
                    |   Private       |        Yes         |        No            |         No                 |
                    |   Protected     |        Yes         |        Yes           |         No                 |
                    |   Public        |        Yes         |        Yes           |         Yes                |
                    --------------------------------------------------------------------------------------------

            ii). Constructor:

                - ក្នុង C#, Derived class មិនអាចទទួល Constructor ពី base class ទេ។

                - Object កើតឡើងបាននៅពេលដែលវា Access ទៅ Constructor, ទើបយើងបានជា Object.

                *** យើងដឹងថា Derived មិនអាចទទួល Constructor of base class បានទេ ពេលនោះហើយ Object base class ក៏មិនអាចកើតឡើងដែរ។​
                    អញ្ចឹដើម្បីអាចអោយ Base clas អាច អោយ Derived class បង្កើត object or access to Base class constructor
                    យើងត្រូវប្រើ keyword: ( public  DerivedClassName() : base() )

                    * Constructor របស់ Derived Class:
                        => public  DerivedClassName() : base(); 

            + Example:

                class B : A {

                    int z;
                    public int Pz{
                        get{ return z; }
                        set{ z = value; }
                    }
                    public int MB(){
                        z = z+Px;
                        return z;
                    }

                    public B() : base() // Access to Base class's Constructor
                }
                
--------------------------------------
Date: 13/Sep/22 - Time: 7:30-9:00am 

    4). Static Class:

        - Static class ជា class ដែលបង្កើតដោយប្រើ keyword static.
        - Static class ជា class ដែលមិនអាចបង្កើត object បានទេ.
        - Static class ជា class ដែលមិនអាច inherit បានទេ.
        - Static class មាន members សុទ្ធតែជា Static members.

        + ex: 
        static Class A{
            static int x;
            static string y;

            public static A(){
                
            } 
            public static int Px(){
                get
                set
            } 
            public static int Py(){
                get
                set
            } 

            public static string MA(int i){

            }
        }

        A). Encapsulation:
            - Encapsulation ជារបៀប នៃការរុំឬវេចខ្ចប់ (encapsulate) code និង data ជាមួយគ្នា តាមរយៈ object

            + គោលបំណង:
                - ការពារ data (field) មិនអោយពីខាងក្រៅអាចប្រើប្រាស់បាន (data hiding)
                - អាចប្រើប្រាស់បានតែ public members តែប៉ុណ្ណោះ

--------------------------------------
Date: 2/Sep/22 - Time: 9:15-10:45am 

    Continue:
    2). Class members:

        iii). Method Overloading (public) ឬ Function ជាblock code.
            * Static Contructor:
                - Static Contructor មិនមាន parameter, ដូច្នេះ ក្នុង class អាចមាន static Contructor តែមួយគត់
                - Static Contructor សំរាប់ initalize static field 
                - Static Constructor ត្រូវបាន called នៅពេល class initalized ឬ នៅពេល called static member ជាលើកដំបូង.
                Ex:
                    class A {
                        .
                        .
                        .
                        public static A(){
                            Console.writeline("From static Contructor");
                        }
                        public static String MA(){
                            Console.Writeline("From static method MA()");
                        }
                    }

            + Advantages of constructor: save time.

            + static member: 
                - អាចប្រើរួម.
                - ប្រើបានដោយហៅclassName

    3). Type of members ( Instance, static, abstract, sealed ):
        
        i) instance member: 
            - ជាmemberដែលប្រើបានតាមរយះobject

        ii) static member: 
            - ជាmemberដែលប្រើបានតាមរយះ static
            - Static members ជា members ដែលអាចប្រើរួមគ្នារវាង object ទាំងអស់ដែលកើតចេញពី class នោះ
            - Static members ត្រូវបានបង្កើតដោយប្រើ keyword static:

            EX: 
                class A {
                    
                    static init x;
                    static 
                }
        - abstract member: 
        - sealed member:

--------------------------------------
Date: 6/Sep/22 - Time: 7:30-9:00am 

    Continue:
    2). Class members:
        iii). Method (public) ឬ Function ជាblock code.
            * Contructors:
                i) Default Contructor ( without parameter )

                    + ភាគច្រើនប្រើដើម្បី Initalize value    
                
                ii) Parameterized Constructor:

                    + ប្រើនៅពេលយើងចង់យកតម្លៃពីខាងក្រៅមកប្រើ

                iii) Copy Constructor: ជា ContructorដែលមានParameter ជា class itself.  
                    + copy only data.
    
                    A obj1 = new A():
                    obj1.Px = 10;
                    obj1.Py = "ABCD";
                    A obj2 = obj1;

                    => obj2 contain address the same of obj1.

                iv) Private constructor: 
                    - មិនអាចប្រើ object បានទេ.
                    - Access only class member.

                    + Uses:
                        - នៅពេលដែលត្រូវការclassដែលអាចobjectបានតែ១គត់.

        + Member មានប៉ុន្មានក្រុម?
            - instance member: ជាmemberដែលប្រើបានតាមរយះobject
            - static member: ជាmemberដែលប្រើបានតាមរយះ static
            - abstract member: 
            - sealed member:

--------------------------------------
Date: 2/Sep/22 - Time: 9:15-10:45am 

Chapter 1: OOP (Object Oriented Programming)

    Continue:
    2). Class members:
        iii). Method (public) ឬ Function ជាblock code.
        
            - 
                public returnType MethodName(){
                        // code return value;
                }

                public void MethodName(){

                }
            
            + Parameter: 
                - ជា local variable ដែលប្រកាសនៅក្នុងរង្វង់ក្រចក
                - ប្រើជាមួយតែ Function ទេ

                - ពេលបង្កើតមិនទាន់មានLocationនៅក្នុងMemoryទេ.
                - មាន memory location នៅពេលគេហៅវា.
                - Memory location នឹងត្រូវលុបចោលពេលចប់ Function.
                - ហើយត្រូវបានគេហៅថា local variable.

            + Argument: a value that is passed between programs, subroutines or functions.

            + Passing by value: បោះតម្លៃCopyរបស់variable.

            + Passing by reference: 

            គេត្រូវការ Parememter នៅពេលដែលយើងត្រូវការយកvalueពីខាងក្រៅមកប្រើ
            
            Object:
                1. មានរបស់សម្គាល់ (Property, Field).
                1. មានសម្ថភាព (Method).
            
            * Method Overloading: ជា method ដែលមានឈ្មោះដូចគ្ណាច្រើនតែខុសចំនួនParameter
                - ងាយស្រួលក្នុងការអាន
                - ងាយស្រួលចំណាំ
                
            * Contructors: គឺជា special method
                លក្ខណះពិសេស:
                1. ត្រូវមានឈ្មោះដូច class
                2. Constructor ត្រូវបាន called ដោយស្វ័យប្រវត្តិនៅពេលបង្កើត object.
                - ជា method ដែលមិនreturn តម្លៃ.

                + Constructor មាន5:
                    - Default constructor
                    - Parameterize Contructors
                    - copy constructor
                    - private constructor.
                    - static constructor

--------------------------------------

Date: 30/Aug/22 - Time: 7:30-9:00am 

Continue:
Chapter 1: OOP (Object Oriented Programming)

    1). Clss & Object:
        - class is source code that we can define data(field), property, method, event inside it follow object that we want.

            Ex: class ClassName {
                -----------
            }

        - Object is things that create from Class:

            Ex: ClassType Object = new classType();

    2). Class members:

        i). Field:
            + Components of class:

                - Data (Field):
                - Properties:
                - Method: ឬ Function ជាblock code.
                - Event: 

            + Variable have two:
                - Scalar variable is a variable or memory location that can store only one variable.
                - Array is a variable or memory location that can store multiple value.

            + Value Type & Referene Type:
                - Value Type: store value directly inside it own location memory.
                - Referene Type: store only address that refer to value. Doesn't store its value directly.

                    Ex: y|address| -----> | ABCD |

        ii). property: is a block code that we can write code to access( Read/Write ) to private data.

            Ex: public returnType PropertyName {

                get { return Varname; }
                set { Varname value; }
            }

            Code:

                class Student {

                    // Field
                    private int x;

                    // Property
                    public int Px{
                        get { return x; }
                        set { x = value; }
                    }
                }

                Student obj = new Student();
                obj.px = 10;
                int i = obj.px;

--------------------------------------------

Date: 26/Aug/22 - Time: 9:15:10:45am 

Chapter 1: OOP (Object Oriented Programming)

    - To have object with need to create class.

    - Class is source code.

    - ដើម្បីបង្កើតObjectត្រូវដឹងពីរបស់សម្គាល់ (field or properties, member variable)

    + In Programming:
        - Data
        - Function: ជាblock code.

    + In OOP:
        - Data 
        - Properties 
        - Method 
        - Event

    Field ជា member variable របស់ class
    - មុខងារសំរាប់ store dataclear
